{"version":3,"sources":["Card.js","Cardarray.js","Scroll.js","Searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["card","name","mail","id","class","className","alt","src","cardarray","robots","map","user","i","Scroll","props","style","overflow","border","height","children","Searchbox","searchfield","searchchange","type","placeholder","onChange","App","onsearchchange","event","setState","target","value","state","fetch","then","response","json","users","filteredrobots","this","filter","toLowerCase","includes","lenght","Cardarray","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+PAgBeA,EAZH,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,KAAKC,EAAM,EAANA,GACpB,OAEI,sBAAKC,MAAM,KAAKC,UAAU,sDAA1B,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,eACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLM,EAtBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAGd,OACI,8BAEGA,EAAOC,KAAI,SAACC,EAAKC,GAElB,OACA,cAAC,EAAD,CAEIT,GAAIM,EAAOG,GAAGT,GACdF,KAAMQ,EAAOG,GAAGX,KAChBC,KAAMO,EAAOG,GAAGV,MAHXU,SCDJC,EATF,SAACC,GAEd,OACI,qBAAKC,MAAO,CAACC,SAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,YCQAC,EAZC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC3B,OACI,qBAAKjB,UAAU,OAAf,SACA,uBAAOA,UAAU,mCACjBkB,KAAM,SACLC,YAAY,eACZC,SAAUH,OC+CJI,G,wDA/CX,aAAc,IAAD,8BACT,gBAgBJC,eAAe,SAACC,GACX,EAAKC,SAAS,CAACR,YAAYO,EAAME,OAAOC,SAhBzC,EAAKC,MAAM,CACPvB,OAAQ,GACRY,YAAa,IAJR,E,qDASb,WAAoB,IAAD,OACfY,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAM,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAUxC,WAAU,IAAD,OAECC,EAAeC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC1C,OAAOA,EAAOR,KAAKwC,cAAcC,SAAS,EAAKV,MAAMX,YAAYoB,kBAErE,OAA+B,IAA5BF,KAAKP,MAAMvB,OAAOkC,OAET,yCAMZ,sBAAKtC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWiB,aAAciB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAACiB,EAAD,CAAWnC,OAAQ6B,a,GAxCbO,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACCC,SAASC,eAAe,SAM7BX,M","file":"static/js/main.680018f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\n\r\nconst card =({name,mail,id})=>{\r\n    return(\r\n\r\n        <div class='hi' className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc' >\r\n            <img alt='robots' src={`https://robohash.org/${id}?200*200'`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{mail}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default card;","import React from 'react';\r\nimport Card from'./Card.js';\r\nconst cardarray=({robots})=>{\r\n\r\n    \r\n    return(\r\n        <div>\r\n        {\r\n           robots.map((user,i)=>{\r\n    \r\n          return (\r\n          <Card \r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              mail={robots[i].mail}\r\n         />\r\n                 );\r\n        })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default cardarray;\r\n","import React from 'react';\r\n\r\nconst Scroll=(props)=>\r\n{\r\nreturn(\r\n    <div style={{overflow: 'scroll',border:'2px solid black',height:'800px'}}>\r\n        {props.children}\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Scroll; ","import React from 'react';\r\n\r\nconst Searchbox=({searchfield, searchchange})=>{\r\n    return (\r\n        <div className='pa2 '>\r\n        <input className='pa3 ba b--green bg-lightest-blue'\r\n        type ='serach'\r\n         placeholder='search robot' \r\n         onChange={searchchange}\r\n         />\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React,{Component}from 'react';\r\nimport Cardarray from'./Cardarray.js';\r\nimport Scroll from'./Scroll';\r\n\r\nimport Searchbox from './Searchbox.js';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield: '',\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then (users=>this.setState({robots:users})\r\n        );\r\n       \r\n\r\n    }\r\n    onsearchchange=(event) => {\r\n         this.setState({searchfield:event.target.value})\r\n         }\r\n\r\n    \r\n    render() {\r\n        \r\n        const filteredrobots=this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if(this.state.robots.lenght=== 0)\r\n        {\r\n             return <h1>loading</h1>\r\n        }\r\n        else\r\n        {\r\n\r\n    return (\r\n        <div className='tc'>\r\n            <h1 >ROBOFRIENDS</h1>\r\n            <Searchbox searchchange={this.onsearchchange}/>\r\n            <Scroll>\r\n            <Cardarray robots={filteredrobots}/>\r\n            </Scroll>\r\n        </div>\r\n    );\r\n        }\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from'./App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App/>\n    ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics  endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}